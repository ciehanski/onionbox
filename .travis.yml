language: go
go: 1.14.x
os: linux
dist: xenial
install: true
cache:
  directories:
  - $HOME/.cache/go-build
  - $GOPATH/pkg/mod
  - $GOPATH/pkg/src
jobs:
  include:
  - name: linux-amd64
    env: BUILD_OS=linux BUILD_ARCH=amd64 BINARY=linux-amd64
  - name: linux-arm64
    env: BUILD_OS=linux BUILD_ARCH=arm64 BINARY=linux-arm64
  - name: linux-arm
    env: BUILD_OS=linux BUILD_ARCH=arm-7 BINARY=linux-arm
  - name: linux-386
    env: BUILD_OS=linux BUILD_ARCH=386 BINARY=linux-386
  - name: darwin-amd64
    env: BUILD_OS=darwin BUILD_ARCH=amd64 BINARY=darwin-amd64
  - name: darwin-386
    env: BUILD_OS=darwin BUILD_ARCH=386 BINARY=darwin-386
  - name: darwin-arm64
    env: BUILD_OS=darwin BUILD_ARCH=arm64 BINARY=darwin-arm64
  - name: freebsd-amd64
    env: BUILD_OS=freebsd BUILD_ARCH=amd64 BINARY=freebsd-amd64
  - name: freebsd-386
    env: BUILD_OS=freebsd BUILD_ARCH=386 BINARY=freebsd-386
  - name: freebsd-arm
    env: BUILD_OS=freebsd BUILD_ARCH=arm-7 BINARY=freebsd-arm
  - name: openbsd-amd64
    env: BUILD_OS=openbsd BUILD_ARCH=amd64 BINARY=openbsd-amd64
  - name: openbsd-386
    env: BUILD_OS=openbsd BUILD_ARCH=386 BINARY=openbsd-386
  - name: openbsd-arm
    env: BUILD_OS=openbsd BUILD_ARCH=arm-7 BINARY=openbsd-arm
  - name: netbsd-amd64
    env: BUILD_OS=netbsd BUILD_ARCH=amd64 BINARY=netbsd-amd64
  - name: netbsd-386
    env: BUILD_OS=netbsd BUILD_ARCH=386 BINARY=netbsd-386
  - name: netbsd-arm
    env: BUILD_OS=netbsd BUILD_ARCH=arm-7 BINARY=netbsd-arm
  - name: windows-amd64
    env: BUILD_OS=windows BUILD_ARCH=amd64 BINARY=windows-amd64.exe
  - name: windows-386
    env: BUILD_OS=windows BUILD_ARCH=386 BINARY=windows-386.exe
  - language: android
    name: android
    env: BUILD_OS=android BUILD_ARCH=arm64 BINARY=android-arm64.aar
    jdk:
    - oraclejdk8
    android:
      components:
      - tools
      - platform-tools
      - build-tools-26.0.2
      - android-26
    install:
    - echo y | sdkmanager 'ndk-bundle'
    before_script:
    - wget https://dl.google.com/go/go1.14.3.linux-amd64.tar.gz
    - sudo tar -xvf go1.14.3.linux-amd64.tar.gz
    - sudo mv go /usr/local
    - export GOROOT=/usr/local/go
    - export GOPATH=$HOME/gopath
    - export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
    - mkdir cmd/onionbox/bin
    - go get -u -a -v -x github.com/ipsn/go-libtor
    - go mod download
    - go get golang.org/x/mobile/cmd/gomobile
    script:
    - cd cmd/onionbox && gomobile bind -v -x -target=android -o onionbox-$TRAVIS_TAG-$BINARY .
  fast_finish: true
  allow_failures:
  - env: BUILD_OS=android BUILD_ARCH=arm64 BINARY=android-arm64.aar

before_script:
- mkdir cmd/onionbox/bin
- go get -u -a -v -x github.com/ipsn/go-libtor
- go mod download
- go test -v -race -bench -cpu=1,2,4 -covermode atomic -coverprofile=profile.cov ./...
- go get -u github.com/mattn/goveralls
- $GOPATH/bin/goveralls -service=travis-ci -coverprofile=profile.cov

script:
- go get -u github.com/karalabe/xgo
- cd cmd/onionbox && $GOPATH/bin/xgo --targets=$BUILD_OS/$BUILD_ARCH bin/onionbox-$TRAVIS_TAG-$BINARY
# - cd cmd/onionbox && CGO_ENABLED=1 GOOS=$BUILD_OS GOARCH=$BUILD_ARCH go build -v -a -installsuffix cgo -ldflags '-s' -o bin/onionbox-$TRAVIS_TAG-$BINARY .

deploy:
  provider: s3
  access_key_id: $ARTIFACTS_KEY
  secret_access_key: $ARTIFACTS_SECRET
  bucket: $ARTIFACTS_BUCKET
  skip_cleanup: true
  region: us-east-2
  local_dir: $TRAVIS_BUILD_DIR/cmd/onionbox/bin
