language: go
go: 1.13.x
os: linux
dist: xenial
install: true
cache:
  directories:
  - $HOME/.cache/go-build
  - $GOPATH/pkg/mod
  - $GOPATH/pkg/src
jobs:
  include:
  # Linux
  - name: linux
    env: BUILD_OS=linux/amd64,linux/arm,linux/arm64
  # Darwin
  - name: darwin
    env: BUILD_OS=darwin/*
  # Windows
  - name: windows
    env: BUILD_OS=windows/*
  # FreeBSD
  - name: freebsd
    env: BUILD_OS=freebsd/*
  # OpenBSD
  - name: openbsd
    env: BUILD_OS=openbsd/*
  # NetBSD
  - name: netbsd
    env: BUILD_OS=netbsd/*
  # Android
  - language: android
    name: android
    env: BUILD_OS=android BUILD_ARCH=arm64 BINARY=android-arm64.aar
    jdk:
    - oraclejdk8
    android:
      components:
      - tools
      - platform-tools
      - build-tools-26.0.2
      - android-26
    install:
    - echo y | sdkmanager 'ndk-bundle'
    before_script:
    - wget https://dl.google.com/go/go1.14.3.linux-amd64.tar.gz
    - sudo tar -xvf go1.14.3.linux-amd64.tar.gz
    - sudo mv go /usr/local
    - export GOROOT=/usr/local/go
    - export GOPATH=$HOME/gopath
    - export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
    - mkdir cmd/onionbox/bin
    - go get -u -a -v -x github.com/ipsn/go-libtor
    - go mod download
    - go get golang.org/x/mobile/cmd/gomobile
    script:
    - cd cmd/onionbox && gomobile bind -v -x -target=android -o onionbox-$TRAVIS_TAG-$BINARY .
  fast_finish: true
  allow_failures:
  - env: BUILD_OS=android BUILD_ARCH=arm64 BINARY=android-arm64.aar
  - env: BUILD_OS=windows
  - env: BUILD_OS=darwin

# Get dependencies & run tests
before_script:
# - go get -u -a -v -x github.com/ipsn/go-libtor
- mkdir cmd/onionbox/build
- go get -u github.com/karalabe/xgo
- go get -u github.com/mattn/goveralls
# - go mod download
- go test -v -race -bench -cpu=1,2,4 -covermode atomic -coverprofile=profile.cov ./...

# Build the project
script:
- cd cmd/onionbox && $GOPATH/bin/xgo -v -x -out onionbox-$TRAVIS_TAG --targets=$BUILD_OS .
# - cd cmd/onionbox && CGO_ENABLED=1 GOOS=$BUILD_OS GOARCH=$BUILD_ARCH go build -v -a -installsuffix cgo -ldflags '-s' -o bin/onionbox-$TRAVIS_TAG-$BINARY .

# Upload test coverage to coveralls.io
after_success:
- $GOPATH/bin/goveralls -service=travis-ci -coverprofile=profile.cov

# Deploy artifcats to S3
deploy:
  provider: s3
  access_key_id: $ARTIFACTS_KEY
  secret_access_key: $ARTIFACTS_SECRET
  bucket: $ARTIFACTS_BUCKET
  skip_cleanup: true
  region: us-east-2
  local_dir: $TRAVIS_BUILD_DIR/cmd/onionbox/build
