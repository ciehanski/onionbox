name: build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x, 1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        id: install-go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@v1

      - name: Install Dependencies
        id: install-deps
        run: |
          go get -u -a -v -x github.com/ipsn/go-libtor
          go mod download

      - name: Build
        id: build
        run: |
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-linux-amd64 .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-linux-arm64 .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=arm go build -a -installsuffix cgo -ldflags '-s' -o pigeon-linux-arm .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=368 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-linux-386 .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=darwin GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-darwin-amd64 .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=darwin GOARCH=386 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-darwin-386 .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=freebsd GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-freebsd-amd64 .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=freebsd GOARCH=386 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-freebsd-386 .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=freebsd GOARCH=arm go build -a -installsuffix cgo -ldflags '-s' -o pigeon-freebsd-arm .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=windows GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-windows-amd64.exe .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=windows GOARCH=386 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-windows-386.exe .
          cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on GOOS=android GOARCH=arm64 go build -a -installsuffix cgo -ldflags '-s' -o pigeon-android-arm64.aar .

      - name: Test
        id: test
        run: go test -v -race -bench -cpu=1,2,4 -covermode atomic -coverprofile=profile.cov ./...

      - name: Submit Code Coverage
        id: submit-code-cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get -u github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -service=github -coverprofile=profile.cov

