name: build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x, 1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        id: install-go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@v1

      - name: Install Dependencies
        id: install-deps
        run: |
          go get -u -a -v -x github.com/ipsn/go-libtor
          go mod download

      - name: Build Linux Amd64
        id: build-linux-amd64
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-linux-amd64 .

      - name: Build Linux Arm64
        id: build-linux-arm64
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-linux-arm64 .

      - name: Build Linux Arm
        id: build-linux-arm
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=arm go build -a -installsuffix cgo -ldflags '-s' -o onionbox-linux-arm .

      - name: Build Linux 386 
        id: build-linux-386
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=linux GOARCH=386 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-linux-386 .

      - name: Build Darwin Amd64 
        id: build-darwin-amd64
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=darwin GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-darwin-amd64 .

      - name: Build Darwin 386
        id: build-darwin-386
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=darwin GOARCH=386 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-darwin-386 .

      - name: Build FreeBSD Amd64
        id: build-freebsd-amd64
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=freebsd GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-freebsd-amd64 .

      - name: Build FreeBSD 386
        id: build-freebsd-386
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=freebsd GOARCH=386 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-freebsd-386 .

      - name: Build FreeBSD Arm
        id: build-freebsd-arm
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=freebsd GOARCH=arm go build -a -installsuffix cgo -ldflags '-s' -o onionbox-freebsd-arm .

      - name: Build Windows Amd64
        id: build-windows-amd64
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=windows GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-windows-amd64.exe .

      - name: Build Windows 386
        id: build-windows-386
        run: cd cmd/onionbox && CGO_ENABLED=1 GO111MODULE=on GOOS=windows GOARCH=386 go build -a -installsuffix cgo -ldflags '-s' -o onionbox-windows-386.exe .

      - name: Build Android
        id: build-android
        run: |
          go get golang.org/x/mobile/cmd/gomobile
          gomobile bind -v -x .

      - name: Test
        id: test
        run: go test -v -race -bench -cpu=1,2,4 -covermode atomic -coverprofile=profile.cov ./...

      - name: Submit Code Coverage
        id: submit-code-cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get -u github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -service=github -coverprofile=profile.cov

